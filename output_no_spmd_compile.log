nohup: ignoring input
WARNING:root:libtpu.so and TPU device found. Setting PJRT_DEVICE=TPU.
INFO 03-26 22:34:43 [__init__.py:256] Automatically detected platform tpu.
WARNING 03-26 22:34:44 [api_server.py:673] Torch Profiler is enabled in the API server. This should ONLY be used for local development!
INFO 03-26 22:34:44 [api_server.py:912] vLLM API server version 0.7.4.dev342+g806af964
INFO 03-26 22:34:44 [api_server.py:913] args: Namespace(subparser='serve', model_tag='meta-llama/Meta-Llama-3.1-8B', config='', host=None, port=8000, uvicorn_log_level='info', allow_credentials=False, allowed_origins=['*'], allowed_methods=['*'], allowed_headers=['*'], api_key=None, lora_modules=None, prompt_adapters=None, chat_template=None, chat_template_content_format='auto', response_role='assistant', ssl_keyfile=None, ssl_certfile=None, ssl_ca_certs=None, enable_ssl_refresh=False, ssl_cert_reqs=0, root_path=None, middleware=[], return_tokens_as_token_ids=False, disable_frontend_multiprocessing=False, enable_request_id_headers=False, enable_auto_tool_choice=False, tool_call_parser=None, tool_parser_plugin='', model='meta-llama/Meta-Llama-3.1-8B', task='auto', tokenizer=None, hf_config_path=None, skip_tokenizer_init=False, revision=None, code_revision=None, tokenizer_revision=None, tokenizer_mode='auto', trust_remote_code=False, allowed_local_media_path=None, download_dir='/dev/shm', load_format='auto', config_format=<ConfigFormat.AUTO: 'auto'>, dtype='auto', kv_cache_dtype='auto', max_model_len=512, guided_decoding_backend='xgrammar', logits_processor_pattern=None, model_impl='auto', distributed_executor_backend=None, pipeline_parallel_size=1, tensor_parallel_size=4, enable_expert_parallel=False, max_parallel_loading_workers=None, ray_workers_use_nsight=False, block_size=None, enable_prefix_caching=None, disable_sliding_window=False, use_v2_block_manager=True, num_lookahead_slots=0, seed=None, swap_space=16.0, cpu_offload_gb=0, gpu_memory_utilization=0.5, num_gpu_blocks_override=None, max_num_batched_tokens=512, max_num_partial_prefills=1, max_long_partial_prefills=1, long_prefill_token_threshold=0, max_num_seqs=128, max_logprobs=20, disable_log_stats=False, quantization=None, rope_scaling=None, rope_theta=None, hf_overrides=None, enforce_eager=False, max_seq_len_to_capture=8192, disable_custom_all_reduce=False, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config=None, limit_mm_per_prompt=None, mm_processor_kwargs=None, disable_mm_preprocessor_cache=False, enable_lora=False, enable_lora_bias=False, max_loras=1, max_lora_rank=16, lora_extra_vocab_size=256, lora_dtype='auto', long_lora_scaling_factors=None, max_cpu_loras=None, fully_sharded_loras=False, enable_prompt_adapter=False, max_prompt_adapters=1, max_prompt_adapter_token=0, device='auto', num_scheduler_steps=1, use_tqdm_on_load=True, multi_step_stream_outputs=True, scheduler_delay_factor=0.0, enable_chunked_prefill=None, speculative_model=None, speculative_model_quantization=None, num_speculative_tokens=None, speculative_disable_mqa_scorer=False, speculative_draft_tensor_parallel_size=None, speculative_max_model_len=None, speculative_disable_by_batch_size=None, ngram_prompt_lookup_max=None, ngram_prompt_lookup_min=None, spec_decoding_acceptance_method='rejection_sampler', typical_acceptance_sampler_posterior_threshold=None, typical_acceptance_sampler_posterior_alpha=None, disable_logprobs_during_spec_decoding=None, model_loader_extra_config=None, ignore_patterns=[], preemption_mode=None, served_model_name=None, qlora_adapter_name_or_path=None, show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None, disable_async_output_proc=False, scheduling_policy='fcfs', scheduler_cls='vllm.core.scheduler.Scheduler', override_neuron_config=None, override_pooler_config=None, compilation_config=None, kv_transfer_config=None, worker_cls='auto', worker_extension_cls='', generation_config='auto', override_generation_config=None, enable_sleep_mode=False, calculate_kv_scales=False, additional_config=None, enable_reasoning=False, reasoning_parser=None, disable_log_requests=True, max_log_len=None, disable_fastapi_docs=False, enable_prompt_tokens_details=False, dispatch_function=<function ServeSubcommand.cmd at 0x733139964a60>)
INFO 03-26 22:34:56 [config.py:576] This model supports multiple tasks: {'classify', 'score', 'embed', 'reward', 'generate'}. Defaulting to 'generate'.
INFO 03-26 22:34:56 [config.py:1666] Chunked prefill is enabled with max_num_batched_tokens=512.
INFO 03-26 22:34:56 [tpu.py:76] [TPU] Forcing DYNAMO_ONCE compilation level
WARNING 03-26 22:34:56 [tpu.py:108] [V1][TPU] Disable prefix caching
INFO 03-26 22:35:00 [__init__.py:256] Automatically detected platform tpu.
INFO 03-26 22:35:01 [core.py:51] Initializing a V1 LLM engine (v0.7.4.dev342+g806af964) with config: model='meta-llama/Meta-Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Meta-Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=512, download_dir='/dev/shm', load_format=auto, tensor_parallel_size=4, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=None, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar', reasoning_backend=None), observability_config=ObservabilityConfig(show_hidden_metrics=False, otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=None, served_model_name=meta-llama/Meta-Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=True, use_async_output_proc=False, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"level":2,"backend":"openxla","custom_ops":["none"],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":512}
2025-03-26 22:35:02,639	INFO worker.py:1843 -- Started a local Ray instance. View the dashboard at [1m[32m127.0.0.1:8265 [39m[22m
INFO 03-26 22:35:03 [ray_distributed_executor.py:176] use_ray_spmd_worker: True
hosseins: _init_workers_ray() len(bundle_indices)=4
[36m(pid=164802)[0m INFO 03-26 22:35:07 [__init__.py:256] Automatically detected platform tpu.
hosseins: _init_workers_ray() worker_ips=['10.130.0.78', '10.130.0.78', '10.130.0.78', '10.130.0.78']
hosseins: _init_workers_ray() worker_metadata=[RayWorkerMetaData(worker=Actor(RayWorkerWrapper, 405f46ba76103f6b57addae001000000), created_rank=0, adjusted_rank=-1, ip='10.130.0.78'), RayWorkerMetaData(worker=Actor(RayWorkerWrapper, 40a57712d3aad02b15056ee601000000), created_rank=1, adjusted_rank=-1, ip='10.130.0.78'), RayWorkerMetaData(worker=Actor(RayWorkerWrapper, cb051d6046efe99ae71cb38c01000000), created_rank=2, adjusted_rank=-1, ip='10.130.0.78'), RayWorkerMetaData(worker=Actor(RayWorkerWrapper, ecae3c38b90262faeeb3eabf01000000), created_rank=3, adjusted_rank=-1, ip='10.130.0.78')]
hosseins: _init_workers_ray() self.workers=[Actor(RayWorkerWrapper, 405f46ba76103f6b57addae001000000), Actor(RayWorkerWrapper, 40a57712d3aad02b15056ee601000000), Actor(RayWorkerWrapper, cb051d6046efe99ae71cb38c01000000), Actor(RayWorkerWrapper, ecae3c38b90262faeeb3eabf01000000)]
hosseins: _init_workers_ray() len(self.workers)=4
hosseins: _init_workers_ray() node_gpus=defaultdict(<class 'list'>, {'c412530113938ba246961ef55d948405844e161fbcda5669d56d1289': [0, 1, 2, 3]})
hosseins: _init_workers_ray() len(node_workers)=1
hosseins: _init_workers_ray() all_args_to_update_environment_variables=[{'TPU_VISIBLE_CHIPS': '0,1,2,3'}, {'TPU_VISIBLE_CHIPS': '0,1,2,3'}, {'TPU_VISIBLE_CHIPS': '0,1,2,3'}, {'TPU_VISIBLE_CHIPS': '0,1,2,3'}]
INFO 03-26 22:35:08 [ray_distributed_executor.py:358] non_carry_over_env_vars from config: set()
INFO 03-26 22:35:08 [ray_distributed_executor.py:360] Copying the following environment variables to workers: ['VLLM_USE_RAY_SPMD_WORKER', 'VLLM_USE_RAY_COMPILED_DAG', 'VLLM_USE_RAY_COMPILED_DAG_NCCL_CHANNEL', 'VLLM_WORKER_MULTIPROC_METHOD', 'VLLM_TORCH_PROFILER_DIR', 'VLLM_USE_V1']
INFO 03-26 22:35:08 [ray_distributed_executor.py:363] If certain env vars should NOT be copied to workers, add them to /home/hosseins/.config/vllm/ray_non_carry_over_env_vars.json file
[36m(RayWorkerWrapper pid=164802)[0m hosseins: get_node_and_gpu_ids() device_key='TPU'
[36m(RayWorkerWrapper pid=164802)[0m hosseins: get_node_and_gpu_ids() node_id='c412530113938ba246961ef55d948405844e161fbcda5669d56d1289'
[36m(RayWorkerWrapper pid=164802)[0m hosseins: get_node_and_gpu_ids() gpu_ids=['0']
[36m(RayWorkerWrapper pid=164802)[0m WARNING 03-26 22:35:08 [utils.py:577] Overwriting environment variable TPU_VISIBLE_CHIPS from '0' to '0,1,2,3'
[36m(RayWorkerWrapper pid=164802)[0m hosseins: init_worker() self.vllm_config.parallel_config.worker_cls='vllm.v1.worker.tpu_worker.TPUWorker'
ERROR 03-26 22:35:10 [core.py:332] EngineCore hit an exception: Traceback (most recent call last):
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/v1/engine/core.py", line 324, in run_engine_core
ERROR 03-26 22:35:10 [core.py:332]     engine_core = EngineCoreProc(*args, **kwargs)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/v1/engine/core.py", line 279, in __init__
ERROR 03-26 22:35:10 [core.py:332]     super().__init__(vllm_config, executor_class, log_stats)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/v1/engine/core.py", line 57, in __init__
ERROR 03-26 22:35:10 [core.py:332]     self.model_executor = executor_class(vllm_config)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/executor/executor_base.py", line 271, in __init__
ERROR 03-26 22:35:10 [core.py:332]     super().__init__(*args, **kwargs)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/executor/executor_base.py", line 52, in __init__
ERROR 03-26 22:35:10 [core.py:332]     self._init_executor()
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/executor/ray_distributed_executor.py", line 114, in _init_executor
ERROR 03-26 22:35:10 [core.py:332]     self._init_workers_ray(placement_group)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/executor/ray_distributed_executor.py", line 399, in _init_workers_ray
ERROR 03-26 22:35:10 [core.py:332]     self._run_workers("init_worker", all_kwargs)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/executor/ray_distributed_executor.py", line 532, in _run_workers
ERROR 03-26 22:35:10 [core.py:332]     ray_worker_outputs = ray.get(ray_worker_outputs)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/.local/lib/python3.10/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
ERROR 03-26 22:35:10 [core.py:332]     return fn(*args, **kwargs)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/.local/lib/python3.10/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
ERROR 03-26 22:35:10 [core.py:332]     return func(*args, **kwargs)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/.local/lib/python3.10/site-packages/ray/_private/worker.py", line 2782, in get
ERROR 03-26 22:35:10 [core.py:332]     values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/.local/lib/python3.10/site-packages/ray/_private/worker.py", line 929, in get_objects
ERROR 03-26 22:35:10 [core.py:332]     raise value.as_instanceof_cause()
ERROR 03-26 22:35:10 [core.py:332] ray.exceptions.RayTaskError(RuntimeError): [36mray::RayWorkerWrapper.execute_method()[39m (pid=164802, ip=10.130.0.78, actor_id=405f46ba76103f6b57addae001000000, repr=<vllm.executor.ray_utils.RayWorkerWrapper object at 0x79849ffd67a0>)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/worker/worker_base.py", line 621, in execute_method
ERROR 03-26 22:35:10 [core.py:332]     raise e
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/worker/worker_base.py", line 612, in execute_method
ERROR 03-26 22:35:10 [core.py:332]     return run_method(self, method, args, kwargs)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/utils.py", line 2241, in run_method
ERROR 03-26 22:35:10 [core.py:332]     return func(*args, **kwargs)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/worker/worker_base.py", line 594, in init_worker
ERROR 03-26 22:35:10 [core.py:332]     self.worker = worker_class(**kwargs)
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/v1/worker/tpu_worker.py", line 61, in __init__
ERROR 03-26 22:35:10 [core.py:332]     initialize_spmd()
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/vllm-v1/vllm/distributed/utils.py", line 358, in initialize_spmd
ERROR 03-26 22:35:10 [core.py:332]     num_devices = xr.global_runtime_device_count()
ERROR 03-26 22:35:10 [core.py:332]   File "/home/hosseins/miniconda3/envs/vllm-v1/lib/python3.10/site-packages/torch_xla/runtime.py", line 215, in global_runtime_device_count
ERROR 03-26 22:35:10 [core.py:332]     return len(torch_xla._XLAC._xla_get_all_runtime_devices())
ERROR 03-26 22:35:10 [core.py:332] RuntimeError: Bad StatusOr access: UNKNOWN: TPU initialization failed: open(/dev/vfio/1): Device or resource busy: Device or resource busy; Couldn't open iommu group /dev/vfio/1
ERROR 03-26 22:35:10 [core.py:332] 
INFO 03-26 22:35:10 [ray_distributed_executor.py:127] Shutting down Ray distributed executor. If you see error log from logging.cc regarding SIGTERM received, please ignore because this is the expected termination process in Ray.
CRITICAL 03-26 22:35:10 [core_client.py:260] Got fatal signal from worker processes, shutting down. See stack trace above for root cause issue.
2025-03-26 22:35:10,834	ERROR worker.py:420 -- Unhandled error (suppress with 'RAY_IGNORE_UNHANDLED_ERRORS=1'): [36mray::RayWorkerWrapper.execute_method()[39m (pid=164810, ip=10.130.0.78, actor_id=ecae3c38b90262faeeb3eabf01000000, repr=<vllm.executor.ray_utils.RayWorkerWrapper object at 0x78551a7c67a0>)
  File "/home/hosseins/vllm-v1/vllm/worker/worker_base.py", line 621, in execute_method
    raise e
  File "/home/hosseins/vllm-v1/vllm/worker/worker_base.py", line 612, in execute_method
    return run_method(self, method, args, kwargs)
  File "/home/hosseins/vllm-v1/vllm/utils.py", line 2241, in run_method
    return func(*args, **kwargs)
  File "/home/hosseins/vllm-v1/vllm/worker/worker_base.py", line 594, in init_worker
    self.worker = worker_class(**kwargs)
  File "/home/hosseins/vllm-v1/vllm/v1/worker/tpu_worker.py", line 61, in __init__
    initialize_spmd()
  File "/home/hosseins/vllm-v1/vllm/distributed/utils.py", line 358, in initialize_spmd
    num_devices = xr.global_runtime_device_count()
  File "/home/hosseins/miniconda3/envs/vllm-v1/lib/python3.10/site-packages/torch_xla/runtime.py", line 215, in global_runtime_device_count
    return len(torch_xla._XLAC._xla_get_all_runtime_devices())
RuntimeError: Bad StatusOr access: UNKNOWN: TPU initialization failed: open(/dev/vfio/3): Device or resource busy: Device or resource busy; Couldn't open iommu group /dev/vfio/3
2025-03-26 22:35:10,837	ERROR worker.py:420 -- Unhandled error (suppress with 'RAY_IGNORE_UNHANDLED_ERRORS=1'): [36mray::RayWorkerWrapper.execute_method()[39m (pid=164803, ip=10.130.0.78, actor_id=40a57712d3aad02b15056ee601000000, repr=<vllm.executor.ray_utils.RayWorkerWrapper object at 0x7ceb6fdce7a0>)
  File "/home/hosseins/vllm-v1/vllm/worker/worker_base.py", line 621, in execute_method
    raise e
  File "/home/hosseins/vllm-v1/vllm/worker/worker_base.py", line 612, in execute_method
    return run_method(self, method, args, kwargs)
  File "/home/hosseins/vllm-v1/vllm/utils.py", line 2241, in run_method
    return func(*args, **kwargs)
  File "/home/hosseins/vllm-v1/vllm/worker/worker_base.py", line 594, in init_worker
    self.worker = worker_class(**kwargs)
  File "/home/hosseins/vllm-v1/vllm/v1/worker/tpu_worker.py", line 61, in __init__
    initialize_spmd()
  File "/home/hosseins/vllm-v1/vllm/distributed/utils.py", line 358, in initialize_spmd
    num_devices = xr.global_runtime_device_count()
  File "/home/hosseins/miniconda3/envs/vllm-v1/lib/python3.10/site-packages/torch_xla/runtime.py", line 215, in global_runtime_device_count
    return len(torch_xla._XLAC._xla_get_all_runtime_devices())
RuntimeError: Bad StatusOr access: UNKNOWN: TPU initialization failed: open(/dev/vfio/3): Device or resource busy: Device or resource busy; Couldn't open iommu group /dev/vfio/3
